# vi:syntax=python
# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4
# -*- mode: python -*-
# TEST_INT=PF

TCCL(
    include = [
        "../../../config-templates/tc/template_tc_filtertest_soc_q_in_q_test_setup.config",
    ],

    test_setup = [
    ],

    test_teardown = [
    ],

    traffic_generators = [
        CustomTrafficGenerator(
            title="soc_cvlan_prio_testcase",
            source=Ref("traffic_partner"),
            destination=Ref("traffic_dut"),
            source_interface=Ref("HOST2_DEV_PF0"),
            destination_interface=Ref("HOST1_DEV_PF0_VF0"),
            duration=10,
            analyzer=[
                Pass(),
                Fail(),
                Fail()
            ],
            skip_layers="Raw",
            send_combined=False,
            packet=[
                """
                Ether(
                    src={HOST2_PF0_VF0_MAC},
                    dst={HOST1_PF0_VF0_MAC},
                    type=0x88a8
                ) /
                Dot1AD(
                    prio={prio},
                    id=0,
                    vlan=100,
                    type=0x8100
                ) /
                Dot1Q(
                    prio=0,
                    id=0,
                    vlan=200,
                    type=0x800
                ) /
                IP(
                    version=4,
                    ihl=5,
                    tos=0x0,
                    len=84,
                    id=25635,
                    flags=0,
                    frag=0,
                    ttl=64,
                    proto=1,
                    chksum=0x811f,
                    src={HOST2_p},
                    dst={HOST1_p}
                ) /
                ICMP(
                    type=0,
                    code=0,
                    chksum=0xba7b,
                    id=0x4b55,
                    seq={ICMP_SEQ}
                )
                """,
            ],
            expected=[
                """
                Ether(
                    src={HOST2_PF0_VF0_MAC},
                    dst={HOST1_PF0_VF0_MAC},
                    type=0x800
                ) /
                IP(
                    version=4,
                    ihl=5,
                    tos=0x0,
                    len=84,
                    id=25635,
                    flags=0,
                    frag=0,
                    ttl=64,
                    proto=1,
                    chksum=0x811f,
                    src={HOST2_p},
                    dst={HOST1_p}
                ) /
                ICMP(
                    type=0,
                    code=0,
                    chksum=0xba7b,
                    id=0x4b55,
                    seq={ICMP_SEQ}
                )
                """,
            ],
            packet_arguments={
                "HOST1_PF0_VF0_MAC": MacAddress(
                    client=Ref("x86_dut"),
                    network="p",
                ),
                "HOST2_PF0_VF0_MAC": MacAddress(
                    client=Ref("x86_partner"),
                    network="p",
                ),
                "HOST1_p": IpAddress(
                    client=Ref("x86_dut"),
                    network="p",
                ),
                "HOST2_p": IpAddress(
                    client=Ref("x86_partner"),
                    network="p",
                ),
                "prio": [
                    0,
                    1,
                    2,
                ],
                "ICMP_SEQ": [
                    0x5,
                    0x6,
                    0x7,
                ],
            },
        ),
    ],
)

