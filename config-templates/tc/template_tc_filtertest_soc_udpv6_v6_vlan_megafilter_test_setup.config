# vi:syntax=python
# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4
# -*- mode: python -*-

TCCL(
    test_setup = [
        Ip(
            client=Ref("admin_dut"),
            command='address',
            argument='show',
        ),
        Ip(
            client=Ref("admin_dut"),
            command='link',
            argument=[
                'del dev {VXLAN_NAME}',
                'del dev {GENEV_NAME}',
            ],
            argument_params={
                "VXLAN_NAME": "vxlan0",
                "GENEV_NAME": "geneve0",
            },
            ignore=[
                "Cannot find device",
            ],
        ),
        TC(
            client=Ref("admin_dut"),
            command='filter',
            argument=[
                "del dev {DEV_PF0_VF0_REP} parent ffff:",
                "del dev {DEV_PF0} parent ffff:",
            ],
            argument_params={
                "DEV_PF0": Ref("HOST1_DEV_PF0"),
                "DEV_PF0_VF0_REP": Ref("HOST1_DEV_PF0_VF0_REP"),
            },
            ignore=[
                "Error: Parent Qdisc doesn't exists.",
            ],
        ),
        TC(
            client=Ref("admin_dut"),
            command='qdisc',
            argument=[
                'add dev {DEV_PF0} ingress',
                'add dev {DEV_PF0_VF0_REP} ingress',
            ],
            argument_params={
                "DEV_PF0": Ref("HOST1_DEV_PF0"),
                "DEV_PF0_VF0_REP": Ref("HOST1_DEV_PF0_VF0_REP"),
            },
            ignore=[
                "Error: Exclusivity flag on, cannot modify",
            ],
        ),
        TC(
            client=Ref("admin_dut"),
            command='filter',
            argument=[
                "add dev {DEV_PF0_VF0_REP} parent ffff: chain 0 prio 3 protocol ipv6 "
                "flower skip_sw dst_mac {HOST2_PF0_VF0_MAC} src_mac {HOST1_PF0_VF0_MAC} "
                "ip_proto udp src_port 49796 dst_port 45596 "
                "action vlan push id 6 protocol 802.1Q priority 0 "
                "action mirred egress redirect dev {DEV_PF0}",

                "add dev {DEV_PF0} parent ffff: chain 0 prio 3 protocol 802.1Q "
                "flower skip_sw vlan_id 6 vlan_prio 0 vlan_ethtype ipv6 "
                "dst_mac {HOST1_PF0_VF0_MAC} src_mac {HOST2_PF0_VF0_MAC} "  # ip_proto udp"
                "action vlan pop "
                "action mirred egress redirect dev {DEV_PF0_VF0_REP}",
            ],
            argument_params={
                "DEV_PF0_VF0_REP": Ref("HOST1_DEV_PF0_VF0_REP"),
                "DEV_PF0": Ref("HOST1_DEV_PF0"),
                "HOST1_PF0_VF0_MAC": MacAddress(
                    client=Ref("x86_dut"),
                    network="p",
                ),
                "HOST2_PF0_VF0_MAC": MacAddress(
                    client=Ref("x86_partner"),
                    network="p",
                ),
            },
        ),
        Ip(
            client=Ref("admin_dut"),
            command='address',
            argument='show',
        ),
        Ip(
            client=Ref("admin_dut"),
            command='-d link',
            argument='show',
        ),
        TC(
            client=Ref("admin_dut"),
            command='filter',
            argument=[
                "show dev {DEV_PF0_VF0_REP} egress",
                "show dev {DEV_PF0} egress",
            ],
            argument_params={
                "DEV_PF0": Ref("HOST1_DEV_PF0"),
                "DEV_PF0_VF0_REP": Ref("HOST1_DEV_PF0_VF0_REP"),
            },
        ),
        TC(
            client=Ref("admin_dut"),
            command='chain',
            argument=[
                "show dev {DEV_PF0_VF0_REP} egress",
                "show dev {DEV_PF0} egress",
            ],
            argument_params={
                "DEV_PF0": Ref("HOST1_DEV_PF0"),
                "DEV_PF0_VF0_REP": Ref("HOST1_DEV_PF0_VF0_REP"),
            },
        ),
    ],

    test_teardown = [
    ],

    traffic_generators = [
    ],
)

